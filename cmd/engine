#!/usr/bin/env node

var util       = require('util');
var path       = require('path');
var express    = require('express');
var jadeify    = require('jadeify');
var shortify   = require('shortify');
var commander  = require('commander');
var browserify = require('browserify');

var app = express();

require('../lib/config')(app);

commander
  .version('0.0.0')
  .description('command line interface for engine interaction');

commander
  .command('build <source>')
  .action(function(source) {
    var options = app.settings.engine.builder;

    options.entries = path.join(process.cwd(), source);
    options.standalone = 'test';

    var builder = browserify(options);
    builder.transform(shortify(options.aliases));
    builder.transform(jadeify);
    builder.bundle(options).on('error', function(err) {
      process.stderr.write(err);
    }).pipe(process.stdout);
  });

commander
  .command('*')
  .action(function(options) {
    commander.help();

    success();
  });

commander.parse(process.argv);

if (!commander.args.length) {
  commander.help();

  success();
}

function success(message) {
  message = util.format('%s\n', message || '');

  process.stdout.write(message);
  process.exit(0);
}

function failure(message) {
  message = util.format('%s\n', message ||Â '');

  process.sterr.write(message);
  process.exit(1);
}
